package com.hurix.api.readerAPIs;

import static io.restassured.RestAssured.given;
import io.restassured.response.Response;

import com.hurix.automation.utility.Log;

public class UploadMediaFile {
	
	private static String UploadMediaFile;// = "{\"from\":0,\"size\":50,\"searchText\":\"Native\",\"searchOn\":\"both\",\"searchType\":\"partial\",\"searchField\":[\"author\",\"ISBN\",\"description\",\"bookTitle\",\"subject\",\"Series Title\",\"Interest Level\",\"Publisher\",\"Book content\",\"grade\",\"board\"],\"books\":[]}";

	public static Response uploadMediaFile(String userToken,String deviceID,String deviceType)
	{
		Response jsonResponse = null;
		try {			
			UploadMediaFile = "{\"base64\":\"\""
					+ ",\"mimeType\":\"jpg\"}" ;
					
			Log.startTestCase("UploadMediaFile");
			Log.info("Body : "+UploadMediaFile);
			Log.info("userToken : "+userToken);
			Log.info("URL : "+"/DistributionServices/services/api/reader/user/"+deviceID+"/"+deviceType+"/uploadMediaFile");
			
			jsonResponse = given()
					.header("Content-Type","application/json")
					.header("usertoken",userToken)
					.body(UploadMediaFile)					
					.post("/DistributionServices/services/api/reader/user/"+deviceID+"/"+deviceType+"/uploadMediaFile");
				

			Log.info("uploadMediaFile Response: "+jsonResponse.then().extract().response().prettyPrint());
		} catch (Exception exp) 
		{
			Log.fail(exp.getMessage());
			Log.fail("fails due to"+ exp.getCause());
			exp.printStackTrace();
		}
		Log.endTestCase("End");
		return jsonResponse;
	}
}
